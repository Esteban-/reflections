What happens when you initialize a repository? Why do you need to do it?
	When you initialize a repository, a .git directory is made containing some metadata.
	I need this directory to store the information about the history of the repository, etc.
How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area is the are where files are grouped before making a commit.
	This area allows the user to review what files will be added to the final commit, to avoid pushing an incomplete commit.
How can you use the staging area to make sure you have one commit per logical change?
	The staging area can be used to verify what files will be present in the final commit instead of directly adding them.
	This can be used to avoid pushing more of one commit per logical change, because it gives the user a chance to review their actions.
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches are helpful when you want to work on experimental features and concepts on projects while keeping a stable master branch.
How do the diagrams help you visualize the branch structure?
	Diagrams help you visualize the branch by showing the commits followed by their parent commits ending on the initial commit.
	This is helpful to find if commits would be reachable by other commits.
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	The result of merging two branches is a branch that contains all commits of both branches.
	We represent it that way in order to show what commits should be in the final merge.
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	The advantage of using automatic merging is that it saves time in making several changes to a file by simply merging everything automatically.
	However, it can't interpret code, in situations where 2 people made 2 different versions to the same line, it can't take a decision.
	In these situations, the user must do the changes and commit them.